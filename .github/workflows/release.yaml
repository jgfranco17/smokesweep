name: Production Release

on:
  push:
    tags:
      - "*.*.*"

jobs:
  verify:
    name: Verify project state
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run workspace setup
        uses: ./.github/actions/setup-workspace

      - name: Run tests
        run: |
          just test

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: verify
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run setup
        uses: ./.github/actions/setup-workspace

      - name: Set version
        id: set-version
        run: |
          export VERSION=$(jq -r .version info.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up GitHub CLI
        shell: bash
        run: |
          sudo apt update
          sudo apt install gh -y
          gh --version

      - name: Generate changelog
        id: changelog
        run: |
          SPEC_VERSION="${{ steps.set-version.outputs.version }}"
          CHANGELOG=$(cat ".github/release/v${SPEC_VERSION}.md")

          {
              echo 'changelog<<EOF'
              echo "$CHANGELOG"
              echo 'EOF'
          } >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.set-version.outputs.version }} \
          --title "${{ steps.set-version.outputs.version }}" \
          --notes "${{ steps.changelog.outputs.changelog }}" \
          --latest

      - name: Check for GoReleaser config
        id: check-goreleaser
        run: |
          # Check for common GoReleaser config file names
          if [ -f ".goreleaser.yml" ] || [ -f ".goreleaser.yaml" ] || [ -f "goreleaser.yml" ] || [ -f "goreleaser.yaml" ]; then
              echo "âœ… GoReleaser configuration found"
              echo "has_config=true" >> $GITHUB_OUTPUT
          else
              echo "No GoReleaser configuration found, skipping artifact publishing"
              echo "has_config=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish artifacts
        id: goreleaser-publish
        if: ${{  steps.check-goreleaser.outputs.has_config == 'true' }}
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "latest"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
